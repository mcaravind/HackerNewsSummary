{"id":9399316,"created_at":"2015-04-18T13:10:03Z","author":"srpeck","title":"KDB bindings for Lua","url":"https://github.com/geocar/qlua","text":"","points":24,"ArchivedOn":"2015-04-18T11:24:18.3442886-07:00","children":[{"id":9399864,"key":9399864,"title":"<p>My kdb is behind haproxy; just using kdb&#x27;s built-in HTTP&#x2F;1.0 webserver for now.  I am still experimenting with stored procedures and haproxy&#x27;s regexp filtering&#x2F;rewriting.</p><p>Has anyone ever compared the performance of kdb+ on Linux versus BSD?  It works under compatibility mode under the latter but I have never benchmarked it against some other OS.  Apparently there is Kx customer demand for a Solaris version but none for BSD?</p>","created_at":"2015-04-18T15:59:17Z","author":"101914","text":"<p>My kdb is behind haproxy; just using kdb&#x27;s built-in HTTP&#x2F;1.0 webserver for now.  I am still experimenting with stored procedures and haproxy&#x27;s regexp filtering&#x2F;rewriting.</p><p>Has anyone ever compared the performance of kdb+ on Linux versus BSD?  It works under compatibility mode under the latter but I have never benchmarked it against some other OS.  Apparently there is Kx customer demand for a Solaris version but none for BSD?</p>","parent_id":9399316,"points":0,"children":[]},{"id":9399510,"key":9399510,"title":"<p><i>You can use this to link with nginx+lua&#x2F;openresty&#x2F;whatever to get a Q-powered web service that can do more than a few thousand connections per second.</i></p><p>Cool stuff! I can see a single machine running this being loads faster than a whole elaborate cluster of php&#x2F;perl&#x2F;python&#x2F;node servers even with some caching.</p><p>Could this also work with just the integrated web server in q? I never tried it, but I wonder why lua is involved?\nIs it supposed to run parts of the logic in lua? Or does just using nginx as a reverse proxy not work well?</p>","created_at":"2015-04-18T14:16:13Z","author":"ah-","text":"<p><i>You can use this to link with nginx+lua&#x2F;openresty&#x2F;whatever to get a Q-powered web service that can do more than a few thousand connections per second.</i></p><p>Cool stuff! I can see a single machine running this being loads faster than a whole elaborate cluster of php&#x2F;perl&#x2F;python&#x2F;node servers even with some caching.</p><p>Could this also work with just the integrated web server in q? I never tried it, but I wonder why lua is involved?\nIs it supposed to run parts of the logic in lua? Or does just using nginx as a reverse proxy not work well?</p>","parent_id":9399316,"points":0,"children":[{"id":9399551,"key":9399551,"title":"<p>Using kdb as an nginx backend isn&#x27;t going to work well at high loads because you&#x27;ll run out of TCP port numbers to use for connections. You might try keepalive, but it still requires clients to behave.</p><p>It&#x27;s in lua because nginx doesn&#x27;t have a module system: getting a lua module available on all our edge nodes caused less friction than a bunch of nginx patches and an nginx deploy.</p>","created_at":"2015-04-18T14:29:59Z","author":"geocar","text":"<p>Using kdb as an nginx backend isn&#x27;t going to work well at high loads because you&#x27;ll run out of TCP port numbers to use for connections. You might try keepalive, but it still requires clients to behave.</p><p>It&#x27;s in lua because nginx doesn&#x27;t have a module system: getting a lua module available on all our edge nodes caused less friction than a bunch of nginx patches and an nginx deploy.</p>","parent_id":9399510,"points":0,"children":[]}]}],"WordIDMapping":{"kdb":[9399864,9399551],"behind":[9399864],"haproxy":[9399864],"just":[9399864,9399510],"using":[9399864,9399510,9399551],"kdb'":[9399864],"built":[9399864],"http/1":[9399864],"0":[9399864],"webserv":[9399864],"now":[9399864],"stil":[9399864,9399551],"experimenting":[9399864],"stored":[9399864],"procedur":[9399864],"haproxy'":[9399864],"regexp":[9399864],"filtering/rewriting":[9399864],"anyon":[9399864],"ev":[9399864],"compared":[9399864],"perform":[9399864],"kdb+":[9399864],"linux":[9399864],"versu":[9399864],"bsd":[9399864],"work":[9399864,9399510,9399551],"und":[9399864],"compatibility":[9399864],"mod":[9399864],"latt":[9399864],"nev":[9399864,9399510],"benchmarked":[9399864],"against":[9399864],"som":[9399864,9399510],"oth":[9399864],"o":[9399864],"apparently":[9399864],"custom":[9399864],"demand":[9399864],"solari":[9399864],"version":[9399864],"non":[9399864],"can":[9399510],"use":[9399510,9399551],"link":[9399510],"nginx+lua/openresty/whatev":[9399510],"q":[9399510],"powered":[9399510],"web":[9399510],"servic":[9399510],"than":[9399510,9399551],"few":[9399510],"thousand":[9399510],"connection":[9399510,9399551],"p":[9399510],"second":[9399510],"cool":[9399510],"stuff":[9399510],"see":[9399510],"singl":[9399510],"machin":[9399510],"running":[9399510],"being":[9399510],"load":[9399510,9399551],"fast":[9399510],"whol":[9399510],"elabor":[9399510],"clust":[9399510],"php/perl/python/nod":[9399510],"serv":[9399510],"even":[9399510],"caching":[9399510],"also":[9399510],"integrated":[9399510],"tried":[9399510],"wond":[9399510],"why":[9399510],"lua":[9399510,9399551],"involved":[9399510],"supposed":[9399510],"run":[9399510,9399551],"part":[9399510],"log":[9399510],"doe":[9399510],"nginx":[9399510,9399551],"revers":[9399510],"proxy":[9399510],"wel":[9399510,9399551],"backend":[9399551],"isn't":[9399551],"going":[9399551],"high":[9399551],"becaus":[9399551],"you'll":[9399551],"out":[9399551],"tcp":[9399551],"port":[9399551],"numb":[9399551],"might":[9399551],"try":[9399551],"keepal":[9399551],"requir":[9399551],"cli":[9399551],"behav":[9399551],"it'":[9399551],"doesn't":[9399551],"modul":[9399551],"system":[9399551],"getting":[9399551],"avail":[9399551],"all":[9399551],"our":[9399551],"edge":[9399551],"nod":[9399551],"caused":[9399551],"less":[9399551],"friction":[9399551],"bunch":[9399551],"patch":[9399551],"deploy":[9399551]},"TotalComments":3,"TotalWords":237}