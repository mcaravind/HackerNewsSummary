{"id":9184968,"author":"glittershark","title":"Hexagen: True coroutines for Swift","url":"https://github.com/aliceatlas/hexagen","text":"","children":[{"id":9188533,"author":"Sidnicious","text":"<p>Wouldn&#x27;t it be possible to implement all of the same semantics in pure Swift using a concurrent dispatch queue and some semaphores? I tried making a generator like the one in Hexagen:</p><p><a href=\"https://gist.github.com/Sidnicious/8e57892b14629c5ec740\" rel=\"nofollow\">https:&#x2F;&#x2F;gist.github.com&#x2F;Sidnicious&#x2F;8e57892b14629c5ec740</a></p><p>I understand the main benefits of coroutines as:</p><p>- Cheap creation</p><p>- Cheap context switching</p><p>- Predictable context switching</p><p>…and I don&#x27;t know the performance characteristics of Grand Central Dispatch. Could someone who&#x27;s more familiar with GCD explain why using it for this kind of concurrency is an okay&#x2F;bad idea and how it compares to coroutines?</p><p>(FWIW I&#x27;m a huge fan of hacking async semantics into languages and made a thing like this for C++: <a href=\"https://github.com/Sidnicious/team\" rel=\"nofollow\">https:&#x2F;&#x2F;github.com&#x2F;Sidnicious&#x2F;team</a>)</p>","children":[{"id":9188628,"author":"eridius","text":"<p>Every time you block while on a dispatch queue, you&#x27;re suspending the entire OS thread. GCD will spin up new threads to service queues when the old ones are blocked, but it won&#x27;t do this forever. At some point you&#x27;ll hit a limit where GCD refuses to spin up any new threads and you can&#x27;t make any progress until one of your existing queues resumes doing work.</p><p>You can test this yourself. Experimentally, the limit on OS X 10.10.2 (with the global background queue) is 64 blocked threads. I used the following program to see that: <a href=\"https://gist.github.com/kballard/ff3640e08f2238875680\" rel=\"nofollow\">https:&#x2F;&#x2F;gist.github.com&#x2F;kballard&#x2F;ff3640e08f2238875680</a></p>","children":[]}]},{"id":9187812,"author":"puls","text":"<p>Previously on HN: <a href=\"https://news.ycombinator.com/item?id=9132385\" rel=\"nofollow\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=9132385</a></p>","children":[]}],"WordIDMapping":{"wouldn't":[9188533],"poss":[9188533],"impl":[9188533],"all":[9188533],"sam":[9188533],"sem":[9188533],"pur":[9188533],"swift":[9188533],"using":[9188533],"concurr":[9188533],"dispatch":[9188533,9188628],"queue":[9188533,9188628],"som":[9188533,9188628],"semaphor":[9188533],"tried":[9188533],"making":[9188533],"gener":[9188533],"one":[9188533,9188628],"hexagen":[9188533],"understand":[9188533],"main":[9188533],"benefit":[9188533],"coroutin":[9188533],"cheap":[9188533],"cre":[9188533],"context":[9188533],"switching":[9188533],"predict":[9188533],"switching…and":[9188533],"don't":[9188533],"know":[9188533],"perform":[9188533],"characterist":[9188533],"grand":[9188533],"centr":[9188533],"someon":[9188533],"who'":[9188533],"familiar":[9188533],"gcd":[9188533,9188628],"explain":[9188533],"why":[9188533],"kind":[9188533],"concurrency":[9188533],"okay/bad":[9188533],"idea":[9188533],"how":[9188533],"compar":[9188533],"fwiw":[9188533],"i'm":[9188533],"hug":[9188533],"fan":[9188533],"hacking":[9188533],"async":[9188533],"languag":[9188533],"mad":[9188533],"thing":[9188533],"c++":[9188533],"every":[9188628],"tim":[9188628],"block":[9188628],"whil":[9188628],"you're":[9188628],"suspending":[9188628],"entir":[9188628],"thread":[9188628],"spin":[9188628],"new":[9188628],"servic":[9188628],"when":[9188628],"old":[9188628],"blocked":[9188628],"won't":[9188628],"forev":[9188628],"point":[9188628],"you'll":[9188628],"hit":[9188628],"limit":[9188628],"wher":[9188628],"refus":[9188628],"any":[9188628],"can't":[9188628],"mak":[9188628],"progress":[9188628],"until":[9188628],"existing":[9188628],"resum":[9188628],"doing":[9188628],"work":[9188628],"can":[9188628],"test":[9188628],"yourself":[9188628],"experimentally":[9188628],"glob":[9188628],"background":[9188628],"used":[9188628],"following":[9188628],"program":[9188628],"see":[9188628],"previously":[9187812]},"TotalComments":3}