{"id":9184779,"author":"seancribbs","title":"There Is No Now – Problems with Simultaneity in Distributed Systems","url":"http://queue.acm.org/detail.cfm?id=2745385","text":"","children":[{"id":9185292,"author":"rdtsc","text":"<p>Keeping an always consistent state in a large distributed you are fighting against the law of physics.</p><p>Like it is mentioned, Google did it with their F1&#x2F;Spanner SQL database. But that also mean GPS receivers with antennas on the roofs of data centers.</p><p>Which is yet another thing that can fail and it, either by itself or in a cascade of other failures will lead to unspecified and possibly undesirable behavior.</p><p>Recently I see a lot of advocates of dropping NoSQL databases and moving back to Postgress or other SQL databases.</p><p>The problem is SQL and schemas is not the only reason NoSQL databases became popular, they became popular because they also started to have a default and more defined behavior in respect to replication and distribution.</p><p>Most solutions don&#x27;t need that and sticking with a solid single database works very well. But those that need distributed operation have a pretty hard task ahead of them.</p><p>One heuristic you can look at is if and how is distribution implemented. Is it something that is bolted on top, like you download some proxy or addon, or added as an afterthought, be very careful. Those things should be baked into the core. For example, does it support CRTDs?  Does it have master to master replication and so on. If it claims to have consistency instead availability figure out how it is implemented, Paxos, Raft, or something else.</p><p>So far I think Riak is probably the database that thought the hardest and did the most reasonable job. The other simpler database is CouchDB, they have well specified conflict resolution behavior and master to master replication. But you have to usually write your own cluster topology. There are probably others but those are the two I know of first hand.</p>","children":[{"id":9187909,"author":"threeseed","text":"<p>&gt; Recently I see a lot of advocates of dropping NoSQL databases and moving back to Postgress or other SQL databases.</p><p>This is just from a vocal minority on HN. You just need to look at the facts.</p><p>Companies like Mongo, Datastax, Aerospike etc are growing bigger by the day, with increasingly higher valuations. Old school database companies like Teradata are now all about datalakes incorporating Hadoop and Mongo. And technologies like Spark, Impala are now on the front line for many data analytics and processing work.</p><p>In the enterprise at least SQL databases are increasingly being relegated to a small part of the whole data pipeline i.e. storing the consolidated, integrated data model.</p>","children":[{"id":9188345,"author":"pilsetnieks","text":"<p>The advocates of dropping NoSQL and returning to SQL databases are indeed a minority — as the majority never went away from SQL databases, especially for the purposes they fulfil well.</p><p>Right tool for the job and all that stuff.</p>","children":[{"id":9188509,"author":"threeseed","text":"<p>Again the facts simply don&#x27;t agree with you. Companies have been moving away from SQL databases in droves compared to the 1990s. And why wouldn&#x27;t they ? Vendors like Oracle, Microsoft, IBM etc have been screwing them over for ages. \nLow cost data lakes are the new norm.</p><p>Of course I am talking about middle to enterprise companies. I am sure for individuals a typical LAMP setup is still going to be fine. But then again many of those are running their apps in the cloud and hence want a database that is resilient in the face of node outages. MySQL and PostgreSQL are both a PITA to get this right compared to almost every NoSQL database.</p>","children":[{"id":9188860,"author":"louthy","text":"<p>&gt; Again the facts simply don&#x27;t agree with you.  Companies have been moving away from SQL databases in droves compared to the 1990s.</p><p>Do you have any links to said &#x27;facts&#x27;?  Otherwise your comments are just hearsay and anecdote.</p>","children":[{"id":9189025,"author":"chucksmash","text":"<p>Indeed. I suppose it depends on the circles in which one runs but there are still companies actively writing COBOL (or were as of 2011 as far as I can personally verify).</p><p>And they were making millions of dollars from that one small segment of the company.</p><p>I&#x27;d wager that in the enterprise (whatever that means) that where NoSQL is used in companies more than, say, 10 years old, it is generally for non-critical, exploratory one off projects. I don&#x27;t even think NoSQL is close to 50% market share among what I&#x27;ll call the silent majority of more conservative, more enterprisey tech companies&#x2F;IT departments. I have no figures to back that intuition up with, however.</p>","children":[]}]}]}]}]},{"id":9185406,"author":"manigandham","text":"<p>Nice points, have to mention Aerospike as another that did a lot of the right stuff with regard to distributed actions and clustering.</p>","children":[]},{"id":9185466,"author":"logicallee","text":"<p>I&#x27;m not an expert, and it sounds like you are, so I appreciate your feedback here:</p><p>what do you even mean by a consistent state?  even in theory a person initiating a new additional record in Auckland, New Zealand at the same time somebody iniatiates a change in Gibraltar or London (which are antipodal to the former[1]) 66 milliseconds away, cannot have a confirmation in less than 120 milliseconds, right?  So do you just wait for that before declaring &#x27;consistency&#x27;?  Do you literally add 120 milliseconds to each and every request?  (And this is assuming you have a damned good solution to the two generals problem)?  I mean suppose the database tracks something as simple as: number of web page hits.  It&#x27;s a counter.  You now distribute it, and have a stochastic process of counter hits between 0 and 5 per second in your largest cities, distributed throughout the world.  How can that database ever be consistent?</p><p>If there are ten new records per second in New Zealand and ten records per second in the UK, and they potentially depend on each other in some way, are you going to just make everyone wait until everything has been committed and confirmed to be consistent?  Or is &quot;a foolish consistency the hobgoblin of little minds&quot;, and you really can accept out-of-date data and deal with merging conflicts later?</p><p>I just don&#x27;t understand why we would expect consistency to rank up there, when we deal with a worldwide real-time system where the difference between getting served by a local database in 40 milliesconds and one far away in 250 milliseconds is both staggering, and incredibly noticeable.  why be consistent? what is consistence?</p><p>[1] <a href=\"http://www.findlatitudeandlongitude.com/antipode-map/\" rel=\"nofollow\">http:&#x2F;&#x2F;www.findlatitudeandlongitude.com&#x2F;antipode-map&#x2F;</a></p>","children":[{"id":9185823,"author":"chris_va","text":"<p>I&#x27;ve spent too much of my life on this problem :).</p><p>The short version is that you can expose the different read&#x2F;write modes to the client, and let them decide on what works best for their use case.</p><p>For spanner, table 2 in the paper[1] highlights the different interaction modes (read&#x2F;write transaction, read wait for pending transactions, read skip pending transactions, read at some past timestamp). Each operation gives you a &quot;consistent&quot; view of the data, where &quot;consistent&quot; means that you don&#x27;t see partial transactions.</p><p>It turns out that, for most high-qps web applications, you want a recent consistent view of the data, but you don&#x27;t care about pending transactions. That means you can read at &quot;now&quot;, or at &quot;now - 1 second&quot; without any latency penalty.</p><p>Clients doing read&#x2F;write will care about pending transactions, but you can be opportunistic if the transactions do not overlap. Settling transactions does require quorum synchronization, so you are limited to max(median+1(latency)) milliseconds. These databases are usually keyed by something that minimizes transaction overlap (e.g. you can shard a counter, that kind of thing).</p><p>Regional migration of quorums (e.g. counter for asia, counter for europe) can also be done. So, the counter for &quot;asia&quot; consists in a &quot;segment&quot; (not the actual terminology, but we&#x27;ll go with it) where the quorum exists mostly distinct asia regions. Metadata for the segment (which everything reads at startup, and is kept up to date) will tell you what servers are responsible.</p><p>[1] <a href=\"http://static.googleusercontent.com/media/research.google.com/en/us/archive/spanner-osdi2012.pdf\" rel=\"nofollow\">http:&#x2F;&#x2F;static.googleusercontent.com&#x2F;media&#x2F;research.google.co...</a></p>","children":[]},{"id":9185844,"author":"xxxyy","text":"<p>Given a set of perfectly synchronized distributed clocks you may not even have to wait the 66ms. Incoming transactions (both local and remote) go into the write-ahead log, their ordering is given by the timestamps (which are consistent, because clocks are synchronized). Periodic heartbeats from other nodes give you a green light to commit or abort parts of the write-ahead log into permanent database. All nodes will make the same decisions wrt each transaction.</p><p>You will only have to wait for the commited&#x2F;aborted response, which cannot be achieved faster than 2*66=132ms (and this system can come arbitrarily close to that, by increasing the heartbeat frequency).</p><p>There is no need to wait any time before running a subsequent transaction though. Confirmations will flow with a 132ms delay, but there is no limit on transactions concurrency.</p>","children":[{"id":9185994,"author":"marknadal","text":"<p>Warning, this is a very dangerous practice. The whole point of the article states that machines do fail and that networks are unreliable. He had a specific section in their that even Spanner has a 7ms uncertainty on time.</p><p>Therefore: You CANNOT trust timestamps or your clock.</p>","children":[{"id":9186842,"author":"xxxyy","text":"<p>Yes, I know. This is a thought experiment, as there is really no such thing as perfectly synchronized clocks.</p><p>Also despite the need for futuristic clocks the system lacks resistance to failure (no heartbeat from arbitrary node -&gt; no transaction gets commited and no transaction gets aborted -&gt; a deadlock). Maybe this is fixable with Paxos, I&#x27;m not sure.</p>","children":[]}]}]},{"id":9185676,"author":"bdamm","text":"<p>There are many systems which can work just fine in an eventually-consistent manner.  A database of people (customers, users, etc) is a classic example of such a thing.</p><p>In general I think consistency is over valued.  There are plenty of cases where it is important.  Lots of people are brainwashed in college to think that all data must be consistent all the time, and that&#x27;s just not necessary.</p>","children":[{"id":9187944,"author":"threeseed","text":"<p>Couldn&#x27;t agree more. Most people don&#x27;t know that many critical systems e.g. banking are eventually consistent and rely on other methods.</p><p>The concepts of CQRS and Event Sourcing really need to be taught at universities.</p>","children":[]},{"id":9186033,"author":"logicallee","text":"<p>&gt;Lots of people are brainwashed in college to think that all data must be consistent all the time, and that&#x27;s just not necessary.</p><p>I knew it!  So a foolish consistency <i>is</i> the hobgoblin of little minds.</p>","children":[{"id":9186282,"author":"olau","text":"<p>While I agree strict consistency is probably overkill in many if not most situations, the problem with not having consistency is that it potentially makes the application logic much more complicated.</p><p>Take the database of customers - so if you don&#x27;t have consistency, what happens in case someone changes the company address and another person simultaneously requests a delivery of something. Do you risk ending up with half of the old address and half of the new one on the parcel?</p><p>Note you can certainly have this problem in a consistent system too, e.g. if you make a UI without a save button where the address is changed one field at a time.</p><p>Concurrency is just intrinsically hard.</p>","children":[{"id":9187612,"author":"nostrademons","text":"<p>Note that the real world operates like this too: before computers, if someone changes their address and simultaneously sends a package, the package probably will end up at the wrong address.  We have a number of mechanisms in place to mitigate this when it occurs (address forwarding, return-to-sender, customer support, credit card chargebacks), but they <i>still</i> don&#x27;t always work, and sometimes packages just get lost.</p><p>The real world solution to this is the acceptance that yes, sometimes bad things happen for no reason at all.  I suspect that the computer world will eventually move to this as well, with consumers becoming more tolerant of machines that simply give the wrong answer some of the time, as long as they give the wrong answer less frequently as a human would.</p>","children":[]},{"id":9186633,"author":"chousuke","text":"<p>&quot;Lack of consistency&quot; here doesn&#x27;t have to imply lack of atomicity; In the case of your example, an eventually consistent system could return either the old address or the new address at some point in time X, but never a mixture of both. In your situation, the parcel could end up getting delivered to the old address, but there would be no corruption.</p>","children":[]}]}]}]},{"id":9186461,"author":"rdtsc","text":"<p>&gt;  Do you literally add 120 milliseconds to each and every request?</p><p>Yap, you have to add all the delay until you get confirmation from the members of the cluster that the write was written. And you have to have linearizability, so that anyone reading after that (and one can argue what &#x27;that&#x27; and where &#x27;that&#x27; is) will now see the new state. If one of the members has failed you could potentially be stuck forever waiting. Now you also have to make sure how cluster membership and connectivity is defines and what are the possible state and transition during membership change, coupled with network partitions, coupled with hardware failures.</p><p>In other words you are fighting against the laws of physics. It is expensive and hard to do.</p><p>In case of the counters, one should ask is it worth it. Or is an CRDT based counter (that will eventually converge) good enough.</p><p>Even banks are eventually consistent. They choose to be available first. So you can withdraw $100 in New Zeland and then $100 in New York with a short period of time even if you only have $100 in your account. Inconsistency is handled later when you get a letter that your account is overdrawn.</p>","children":[]}]}]},{"id":9188640,"author":"Terr_","text":"<p>Another fun exercise is dealing with players who say &quot;OMG teh netcode sux&quot; for online first-person shooters, especially when they have patently unrealistic expectations for how well the software should break the speed of light.</p><p>Sometimes the hardest part is getting them to understand exactly how much of what they take for granted is an illusion... Often even before any packets leave their machine.</p>","children":[{"id":9188673,"author":"Dylan16807","text":"<p>It&#x27;s less speed of light at fault than other factors, though.  Bufferbloat is terrible, and it&#x27;s hard to make netcode that reacts well when a few percent of packets are lost or slow.</p>","children":[{"id":9189011,"author":"Terr_","text":"<p>Sure, other factors predominate, but even in a significantly-more-ideal world, a signal from LA to NY is still going to be a 40ms round-trip. (3940km one-way along the surface of the earth, 200,000km&#x2F;s signal speed in the glass.)</p><p>That&#x27;s still more than enough time to require algorithmic trickery from games in order to provide the illusion of &quot;real-time&quot; gaming over the internet.</p>","children":[]}]}]},{"id":9185057,"author":"glittershark","text":"<p>Reminds me of this (absolutely spectacular) talk from 2009 by Rich Hickey: <a href=\"http://www.infoq.com/presentations/Are-We-There-Yet-Rich-Hickey\" rel=\"nofollow\">http:&#x2F;&#x2F;www.infoq.com&#x2F;presentations&#x2F;Are-We-There-Yet-Rich-Hic...</a></p>","children":[]},{"id":9186342,"author":"ajarmst","text":"<p>Doesn&#x27;t appear to mention Lamport Timestamps (<a href=\"https://en.wikipedia.org/wiki/Lamport_timestamps\" rel=\"nofollow\">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Lamport_timestamps</a>) (Yes, THAT Lamport), which are one of the most elegant mechanisms to deal with the some of the discussed problems.</p>","children":[{"id":9187265,"author":"macintux","text":"<p>&gt; Another such area of work is logical time, manifest as vector clocks, version vectors, and other ways of abstracting over the ordering of events.</p><p>Vector clocks and version vectors are variations on the Lamport clock concept (and that quote is from a paragraph that mentions Paxos, another Lamport invention, cited in the bibliography).</p>","children":[]}]},{"id":9185352,"author":"tlarkworthy","text":"<p>Spanner is externally serializable so you do get a &#x27;now&#x27;. You just don&#x27;t know what the agreed now was until after the write.</p><p>The idea that there is no &#x27;now&#x27; is of course, preposterous, we have very strict laws of physics supporting the concept of now (sans relativity) and eventually our engineering will be able to track that very accurately. Spanner is a step on that journey.</p><p>These kinds of &#x27;impossible&#x27; articles will appear very dated in 10 years time, as they are really over exaggerating the rules-of-thumb of the previous 10 years.</p>","children":[{"id":9185381,"author":"dragonwriter","text":"<p>&gt;  we have very strict laws of physics supporting the concept of now (sans relativity)</p><p>Laws of physics &quot;sans relativity&quot; aren&#x27;t the actual laws of physics in our universe. There very much is no <i>now</i> except the now that is also <i>here</i>. Its quite accurate to say that simultaneity does not exist in distributed systems, and simultaneity is less valid as even an approximation the more widely distributed a system is.</p>","children":[{"id":9185919,"author":"tlarkworthy","text":"<p>The error bars on relativistic affects we can expect to experience on earth are pico seconds. So we can pack millions of transactions per second if we get our clocks syncs correct and reliable. The future dbs will be not like we have now.</p>","children":[]},{"id":9185508,"author":"nostrademons","text":"<p>To add some context &amp; numbers to dragonwriter&#x27;s point, the speed-of-light delay from New York to San Francisco is about 21ms [1].  This is about 5 disk seeks, 1200 random SSD reads, 200K main memory reads (without caching), or 10M CPU cycles [2].  Speed of light delays absolutely matter in a distributed system.</p><p>[1] <a href=\"http://chimera.labs.oreilly.com/books/1230000000545/ch01.html#PROPAGATION_LATENCY\" rel=\"nofollow\">http:&#x2F;&#x2F;chimera.labs.oreilly.com&#x2F;books&#x2F;1230000000545&#x2F;ch01.htm...</a></p><p>[2] <a href=\"http://www.eecs.berkeley.edu/~rcs/research/interactive_latency.html\" rel=\"nofollow\">http:&#x2F;&#x2F;www.eecs.berkeley.edu&#x2F;~rcs&#x2F;research&#x2F;interactive_laten...</a></p>","children":[{"id":9186009,"author":"tlarkworthy","text":"<p>that&#x27;s transmission delays not relativistic effects. The idea of spanner is you have a timestamp of when it was decided to commit. The quorum knows they can&#x27;t contact each other quickly but they trust each others timestamps and resolve conflicts based on the trusted commit times (which are accurate through hardware). Transmission delays don&#x27;t undermine the fact there is a very real concept of ordered time in the physical world which is exploitable[1]. Spanner exploits it faster than transmission delays, but with a clock error of 10 ms or something. We have better clocks than that so its probably going to improve...</p><p>[1] sans relativity effects which are TINY, and not the limiting factor at the moment.</p>","children":[]}]},{"id":9185528,"author":"epistasis","text":"<p>Furthermore, at the timescales (nanoseconds) and distances (meters to thousands of kilometers) at which a distributed application operates, relativity is a much better approximation to reality than the intuitive Newtonian physics.</p><p>If 3D chip designs let us take a couple racks of hardware into a few centimeters, then perhaps there will be a more Newtonian &quot;now&quot; possible, but it seems that once we can do that we&#x27;ll just want to build even bigger systems that can analyze more data, and get back to distributed systems again.</p>","children":[]}]}]},{"id":9185397,"author":"jamespitts","text":"<p>This is an excellent overview.</p><p>Simultaneity isn&#x27;t just for machines -- it is necessary for people being connected together online as well. Time sync is a huge part of creating a shared experience, and this will become more widely appreciated as virtual reality develops socially.</p><p>We solved this in a very limited way at rapt.fm for our timed rap battles. We maintained a shared clock tick (with adjustment), allowing UI and in-game events -- e.g. the beat kicking in -- to happen somewhat simultaneously across browsers. This helped make up for the latency of video, and created a feeling that people were together at the same &quot;place&quot;.</p>","children":[{"id":9185497,"author":"brianzelip","text":"<p>:) for the dude eating from a bowl of cereal at the end of the rapt.fm landing page background vid</p>","children":[{"id":9187456,"author":"jamespitts","text":"<p>Yes, that is me! We had a lot of good times in downtown Det.</p>","children":[]}]}]},{"id":9185937,"author":"marknadal","text":"<p>Hallelujah, we need more articles like this. I work in distributed systems, and people hate hate hate hearing the truth, let&#x27;s summarize the article:</p><p>1. You cannot beat the speed of light.</p><p>2. Machines break. Even the most reliable ones.</p><p>3. Networks are unreliable. Even local area networks.</p><p>4. It is an exciting time for distributed systems: CRDTs, Hybrid Logical Clocks, Zookeeper, etc.</p><p>These are things I feel like I&#x27;ve been preaching a lot, but get upset responses &quot;Well, certainly Globally Consistent systems work, most databases are!&quot; Lies, as @rdtsc mentions:</p><p>&quot;Keeping an always consistent state in a large distributed [system] you are fighting against the laws of physics.&quot;</p><p>Next up, that is why master-master replication is important, because at some point your primary will go down (or at least the network to it). I started an interesting thought experiment that turned into a full on open source project: What if we were to build a database in the worst possible environment (the browser, aka javascript and unreliability)? What algorithms would we need to use to make such a system still survive and work?</p><p>This is why I chose and worked on solutions involving Hybrid Logical Clocks and CRDTs, which are at the core of my <a href=\"http://github.com/amark/gun\" rel=\"nofollow\">http:&#x2F;&#x2F;github.com&#x2F;amark&#x2F;gun</a> database. An AP system with eventual consistency and no notion of &quot;now&quot;, as every replica runs in its own special-relativity &quot;state machine&quot; view of the world.</p><p>These are all interesting concepts, and the article was a good one. I recommend it.</p>","children":[]},{"id":9185438,"author":"jhayward","text":"<p>Thanks, this is a helpful introduction to the history and literature of concepts related to time in distributed systems. Most people&#x27;s concept of time is quite simple and they need to be\nbroken loose of some intuitively held, but unhelpful beliefs before\nthey can really do engineering with respect to time.</p><p>Is there a paper somewhere that new folk should read first?  One that\nincludes:</p><p>- A tutorial to describe all of the things we think of as &#x27;time&#x27;,\ne.g. order of sequence, etc. and their dependence on each other.</p><p>- The idea that time as it occurs in the physical world is\nprobabilistic - requiring such descriptors as precision (what is the\nsmallest difference we can discern), and error bounds or probability\ndistributions (how accurately can we describe it).</p><p>- And for the concrete thinkers who &#x27;get&#x27; that true simultaneity is\nimpossible, an easy to understand example of how we succeed in\nobserving logical coherence, from the scale of a single CPU chip\n(internally non-coherent, externally consistent) to cross-continent\ncompute clusters?</p>","children":[]},{"id":9184927,"author":"nickbauman","text":"<p>This article underscores a point I always end up explaining to people who look at Cloud Computing (implemented as &quot;the lambda architecture&quot; in best-of breed scenarios) as a golden hammer that it&#x27;s a good technology, but only for a certain class of problems. You can do things like monitor trends over time and even act on them with soft deadlines using Cloud. But you will never have a cloud technology control your anti-lock braking system on your car. It basic understanding of CAP theorem, really.</p>","children":[{"id":9185060,"author":"dragonwriter","text":"<p>Well you could have locally accessed dynamically provisioned computing capacity (cloud technology) in your car doing that. Remote&#x2F;shared hosting is a different and older thing than cloud technology (though it&#x27;s a popular use of cloud technology.)</p>","children":[{"id":9185113,"author":"jerf","text":"<p>You already do. &quot;Multitasking&quot; covered that decades ago. I&#x27;m not sure that&#x27;s a useful metaphor to cloud technology, though, most especially because multiprocessing systems are exactly where we got our wrong impressions about reliability and the lack of network issues in the first place....</p>","children":[{"id":9185181,"author":"Retric","text":"<p>I would be shocked if any ABS systems in a car actually dynamicly shared resources with anything else.</p>","children":[{"id":9185228,"author":"padelt","text":"<p>That is not uncommon at all and not unsafe if done right. Hard realtime systems are there for exactly that reason. Since you need to dimension everything to worst case scenarios, gains tend to not be as big as with soft realtime systems but there you have it: Dynamically shared resources in critical systems.</p>","children":[{"id":9185329,"author":"Retric","text":"<p>I can see Vehicle Stability Assistance systems that also do ABS breaking, but that&#x27;s not really dynamic resource allocation so much as new solution.  Ditto, for sending information over the cars local network.</p><p>Can you give an example where something not related to traction is run on the same CPU as the ABS&#x2F;traction system?</p>","children":[]}]}]}]},{"id":9185161,"author":"pjc50","text":"<p><i>locally accessed dynamically provisioned</i></p><p>This is a mission critical safety system. There are some standards which are unhappy with dynamically allocating <i>memory</i> in that situation, let alone dynamically allocating the entire compute resource.</p>","children":[{"id":9185267,"author":"dragonwriter","text":"<p>That&#x27;s a good point, though it is different consideration from the response time issue imposed by physical limits of communications round-trip time.</p>","children":[]}]}]}]},{"id":9187755,"author":"yodsanklai","text":"<p>&gt; One of the most important results in the theory of distributed systems is an impossibility result, showing one of the limits of the ability to build systems that work in a world where things can fail.</p><p>Layman question. I wonder how important this result really is.  This is an impossibility result in a certain model, where processes are deterministic. It&#x27;s certainly a nice theoretical result but in practice, there are probabilistic algorithm that solve this problem.</p><p>I don&#x27;t know what are the probabilistic bounds of probabilistic consensus algorithms, but if it&#x27;s arbitrary low, the impossibility result for deterministic processes is irrelevant isn&#x27;t it?</p><p>After all, if we can live with a super low probability of a meteorite destroying the planet, so can we with a good probabilistic consensus algorithm.</p>","children":[]},{"id":9185460,"author":"stcredzero","text":"<p>With the way the world looks now, and the way it&#x27;s shaping up to be in the future, we should be thinking about designing systems where there is no &quot;now&quot; but rather, there is instead a notion of &quot;everything syncs soon.&quot; There can be a robust consensus reality in such a system, but it has to exist a short interval of time in the past.</p><p>I&#x27;m currently working on a multiplayer game design on these principles.</p>","children":[{"id":9185495,"author":"jchrisa","text":"<p>If you want to let a mature open source sync system do the heavy lifting we&#x27;ve recently added Unity 3D support to Couchbase Lite. <a href=\"http://developer.couchbase.com/mobile/unity/\" rel=\"nofollow\">http:&#x2F;&#x2F;developer.couchbase.com&#x2F;mobile&#x2F;unity&#x2F;</a></p><p>Hello world is a game where players drop shapes into a world and they automatically sync &#x2F; appear on other devices.</p><p>Sorry about the plug -- great article Justin! I sent it to my team because I think it does a great job stepping back from the buzzwords and actually talking about the problems distributed databases have to confront.</p>","children":[{"id":9185814,"author":"stcredzero","text":"<p>Interesting. However I&#x27;m not just looking for syncing stats and inventory. What I&#x27;m talking about is designing a new game mechanic around the realities of distributed gaming, then designing a more robust server around that. The server will be finalizing entity positions, damage, and collisions a half second behind &quot;real-time,&quot; and the game mechanic will be designed around this in a way that preserves player autonomy and immediate response. (Basically, deemphasizing aiming while emphasizing tactical dodging where the player seeks to minimize received damage over time.)</p><p><i>great job stepping back from the buzzwords</i></p><p>Those pesky buzzwords. You were just caught out being misled by one. (sync -- which typically means what you thought it did, but also has a generalized meaning)</p>","children":[{"id":9186071,"author":"marknadal","text":"<p>@stcredzero I&#x27;m interested in building simulation systems for distributed systems, and trying to &quot;gamify&quot; them to teach people about these concepts in a tactile-playable way. Would you be interested in such work? It is less building a &quot;entertainment&quot; game and more an &quot;educational&quot; fun game. Shoot me an email: mark@gunDB.io</p>","children":[]},{"id":9188343,"author":"nosuchthing","text":"<p>In competitive video games, if you give the client a large open window of freedom sooner or later you&#x27;ll notice that window being used as a door by swaths of your userbase.</p>","children":[]}]}]},{"id":9185763,"author":"nosuchthing","text":"<p>Having played a multiplayer mobile game that uses a &quot;everything syncs soon&quot; protocol, and at the same time relies on the main mechanics of the game being timing the moves of characters against your opponents it often can lead to making the game highly unpredictable and jittery with &quot;alternate timeline warps&quot; when it resyncs, having nullified important moves.</p>","children":[]}]},{"id":9186494,"author":"keppy","text":"<p>&gt; Another such area of work is logical time, manifest as vector clocks, version vectors, and other ways of abstracting over the ordering of events. This idea generally acknowledges the inability to assume synchronized clocks and builds notions of ordering for a world in which clocks are entirely unreliable.</p><p>Hardware is unreliable. Software is possibly less reliable. We have known that for a long time. The author talks on a conceptual level about logical time, but this concept isn&#x27;t enough to understand the real challenges &amp; possible solutions of keeping interactions in your system logically ordered in the dimension of time[0].</p><p>&gt; You can think of coordination as providing a logical surrogate for &quot;now.&quot; When used in that way, however, these protocols have a cost, resulting from something they all fundamentally have in common: constant communication. For example, if you coordinate an ordering for all of the things that happen in your distributed system, then at best you are able to provide a response latency no less than the round-trip time (two sequential message deliveries) inside that system.</p><p>Consensus protocols don&#x27;t provide a logical surrogate for &#x27;now&#x27;, a log does that. The silver bullet for assuring that your transactions are ordered correctly is immutability[1]--&quot;If two identical, deterministic processes begin in the same state and get the same inputs in the same order, they will produce the same output and end in the same state.[0]&quot;\nIt&#x27;s important, from the perspective of the implementor, to understand that there are multiple pieces to this puzzle, and that each protocol has very specific details that can make or break the reliability and performance of a distributed system. This is similar to how a small bug in your cryptography code can expose the entire system to threat. Paxos itself can be implemented in a myriad of ways, and each decision the implementor makes must be well researched.</p><p>[0]<a href=\"http://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying\" rel=\"nofollow\">http:&#x2F;&#x2F;engineering.linkedin.com&#x2F;distributed-systems&#x2F;log-what...</a></p><p>[1]<a href=\"http://basho.com/clocks-are-bad-or-welcome-to-distributed-systems/\" rel=\"nofollow\">http:&#x2F;&#x2F;basho.com&#x2F;clocks-are-bad-or-welcome-to-distributed-sy...</a></p>","children":[]},{"id":9186002,"author":"keppy","text":"<p>I suggest reading this article for some insight if you haven&#x27;t built out a distributed system. Good hands on, practical information:\n<a href=\"http://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying\" rel=\"nofollow\">http:&#x2F;&#x2F;engineering.linkedin.com&#x2F;distributed-systems&#x2F;log-what...</a></p>","children":[]},{"id":9184989,"author":"jgrahamc","text":"<p><i>Rear Admiral Grace Hopper (one of the most important pioneers in our field, whose achievements include creating the first compiler) used to illustrate this point by giving each of her students a piece of wire 11.8 inches long, the maximum distance that electricity can travel in one nanosecond.</i></p><p>I made download and print versions of this: <a href=\"http://blog.jgc.org/2012/10/a-downloadable-nanosecond.html\" rel=\"nofollow\">http:&#x2F;&#x2F;blog.jgc.org&#x2F;2012&#x2F;10&#x2F;a-downloadable-nanosecond.html</a></p>","children":[]},{"id":9186022,"author":"aristus","text":"<p>Related: <a href=\"http://carlos.bueno.org/2010/04/dismal-guide-to-concurrency.html\" rel=\"nofollow\">http:&#x2F;&#x2F;carlos.bueno.org&#x2F;2010&#x2F;04&#x2F;dismal-guide-to-concurrency....</a></p>","children":[]},{"id":9187830,"author":"hyperion2010","text":"<p>I really enjoy the perspective that &quot;now&quot; is often a useful abstraction for certain types of processes. The fact that it turns out that &quot;now&quot; is one hellishly leaky abstraction. My perspective coming from biology is that for many systems the only meaningful type of &quot;clock&quot; is a logical clock. The important thing is not &quot;when,&quot; when is used as a proxy for an assumed state of a remote part of the system (even if remote is only 10cm away), logical clocks are the only source that can guarantee that the state of the system is what you expect it to be so that it will perform as expected. Thanks to the many hardware guys who have spent years working out the underlying logic for this we mostly ignore it for things like processors. Now we just need to solve it for arbitrarily large finite delays! This also reminds me of a very funny (or depressing) read on systems engineering by James Mickens [1].</p><p>1. <a href=\"http://research.microsoft.com/en-us/people/mickens/thenightwatch.pdf\" rel=\"nofollow\">http:&#x2F;&#x2F;research.microsoft.com&#x2F;en-us&#x2F;people&#x2F;mickens&#x2F;thenightw...</a></p>","children":[]}],"WordIDMapping":{"keeping":[9185292,9185937,9186494],"alway":[9185292,9187612,9185937,9184927],"consist":[9185292,9185466,9185823,9185844,9185676,9187944,9186033,9186282,9186633,9186461,9185937,9185438],"st":[9185292,9185466,9185994,9186461,9185937,9186494,9187830],"larg":[9185292,9185937,9188343,9187830],"distributed":[9185292,9185406,9185466,9185844,9185381,9185508,9185528,9185937,9185438,9187755,9185495,9185814,9186071,9186494,9186002],"fighting":[9185292,9186461,9185937],"against":[9185292,9186461,9185937,9185763],"law":[9185292,9186461,9185352,9185381,9185937],"phys":[9185292,9186461,9185352,9185381,9186009,9185528,9185937,9185438,9185267],"mentioned":[9185292],"googl":[9185292],"did":[9185292,9185406,9185814],"f1/spann":[9185292],"sql":[9185292,9187909,9188345,9188509,9188860],"databas":[9185292,9187909,9188345,9188509,9188860,9185466,9185823,9185844,9185676,9186282,9185937,9185495],"also":[9185292,9185823,9186842,9186461,9185381,9185329,9185814,9187830],"mean":[9185292,9189025,9185466,9185823,9185814],"gp":[9185292],"receiv":[9185292],"antenna":[9185292],"roof":[9185292],"data":[9185292,9187909,9188509,9185466,9185823,9185676,9186033,9185528],"c":[9185292],"yet":[9185292],"anoth":[9185292,9185406,9186282,9188640,9187265,9186494],"thing":[9185292,9185823,9186842,9185676,9187612,9185937,9185438,9184927,9185060,9187755,9186494,9187830],"can":[9185292,9189025,9185466,9185823,9185844,9185676,9186282,9186461,9185919,9185528,9185438,9184927,9185329,9187755,9185460,9185763,9186494,9184989,9187830],"fail":[9185292,9185994,9187755],"eith":[9185292,9186633],"itself":[9185292,9186494],"cascad":[9185292],"oth":[9185292,9187909,9185466,9185844,9187944,9186461,9188673,9189011,9187265,9186009,9185438,9185495,9186494],"failur":[9185292,9186842,9186461],"lead":[9185292,9185763],"unspecified":[9185292],"possibly":[9185292,9186494],"undesir":[9185292],"behavior":[9185292],"recently":[9185292,9187909,9185495],"see":[9185292,9187909,9185823,9186461,9185329],"lot":[9185292,9187909,9185406,9185676,9186033,9187456,9185937],"advoc":[9185292,9187909,9188345],"dropping":[9185292,9187909,9188345],"nosql":[9185292,9187909,9188345,9188509,9189025],"moving":[9185292,9187909,9188509,9188860],"back":[9185292,9187909,9189025,9185528,9185495,9185814],"postgress":[9185292,9187909],"problem":[9185292,9185466,9185823,9186282,9186342,9184927,9187755,9185495],"schema":[9185292],"only":[9185292,9185844,9186461,9184927,9187830],"reason":[9185292,9187612,9185228],"becam":[9185292],"popular":[9185292,9185060],"becaus":[9185292,9185844,9185937,9185113,9185495],"started":[9185292,9185937],"default":[9185292],"defined":[9185292],"respect":[9185292,9185438],"repl":[9185292,9185937],"distribution":[9185292,9185438],"most":[9185292,9185823,9187944,9186282,9186342,9185937,9185438,9185113,9187755,9184989],"solution":[9185292,9185466,9187612,9185937,9185329,9186494],"don't":[9185292,9188509,9188860,9189025,9185466,9185823,9187944,9186282,9187612,9185352,9186009,9187755,9186494],"nee":[9185292,9187909,9185844,9186842,9187944,9185937,9185438,9185228,9187830],"sticking":[9185292],"solid":[9185292],"singl":[9185292,9185438],"work":[9185292,9187909,9185823,9185676,9187612,9187265,9185937,9187755,9186071,9186494],"wel":[9185292,9188345,9187612,9188640,9188673,9185397,9185937,9185060,9186494],"thos":[9185292,9188509],"oper":[9185292,9185823,9187612,9185528],"pretty":[9185292],"hard":[9185292,9186282,9186461,9188673,9185228],"task":[9185292],"ahead":[9185292,9185844],"them":[9185292,9188509,9185823,9188640,9184927,9186071],"one":[9185292,9189025,9185466,9186282,9186461,9189011,9186342,9185937,9185438,9187755,9185814,9184989,9187830],"heurist":[9185292],"look":[9185292,9187909,9184927,9185460],"how":[9185292,9185466,9186461,9188640,9185438,9187755,9186494],"implemented":[9185292,9184927,9186494],"something":[9185292,9185466,9185823,9186282,9186009,9185329,9186494],"bolted":[9185292],"top":[9185292],"download":[9185292,9184989],"som":[9185292,9185466,9185823,9187612,9186633,9186342,9185508,9185937,9185438,9185161,9186002],"proxy":[9185292,9187830],"addon":[9185292],"added":[9185292,9185495],"afterthought":[9185292],"car":[9185292,9185823,9184927,9185060,9185181,9185329],"should":[9185292,9186461,9188640,9185438,9185460],"baked":[9185292],"cor":[9185292,9185937],"exampl":[9185292,9185676,9186633,9185438,9185329,9186494],"doe":[9185292,9185823,9185381,9185495,9186494],"support":[9185292,9187612,9185495],"crtd":[9185292],"mast":[9185292,9185937],"claim":[9185292],"consistency":[9185292,9185466,9185676,9186033,9186282,9186633,9185937],"instead":[9185292,9185460],"availability":[9185292],"figur":[9185292,9189025],"out":[9185292,9185466,9185823,9185814,9186002,9187830],"paxo":[9185292,9186842,9187265,9186494],"raft":[9185292],"else":[9185292,9185181],"far":[9185292,9189025,9185466],"think":[9185292,9189025,9185676,9186033,9185438,9185495,9186494],"riak":[9185292],"probably":[9185292,9186282,9187612,9186009],"thought":[9185292,9186842,9185937,9185814],"hardest":[9185292,9188640],"job":[9185292,9188345,9185495,9185814],"simpl":[9185292,9185466,9185438],"couchdb":[9185292],"specified":[9185292],"conflict":[9185292,9185466,9186009],"resolution":[9185292],"usually":[9185292,9185823],"writ":[9185292,9185844,9186461,9185352],"own":[9185292,9185937],"clust":[9185292,9186461,9185438],"topology":[9185292],"two":[9185292,9185466,9186494],"know":[9185292,9186842,9187944,9185352,9186009,9187755],"first":[9185292,9186461,9188640,9185438,9185113,9184989],"hand":[9185292,9186002],"just":[9187909,9188860,9185466,9185676,9186033,9186282,9187612,9185352,9185528,9185397,9185814,9187830],"from":[9187909,9188345,9188509,9188860,9189025,9185844,9186842,9186461,9189011,9185057,9187265,9185508,9185497,9185438,9185267,9185495,9185814,9186494,9187830],"voc":[9187909],"minority":[9187909,9188345],"fact":[9187909,9188509,9188860,9186009,9187830],"compan":[9187909,9188509,9188860,9189025],"mongo":[9187909],"datastax":[9187909],"aerospik":[9187909,9185406],"etc":[9187909,9188509,9185676,9185937,9185438],"growing":[9187909],"bigg":[9187909,9185528],"day":[9187909],"increasingly":[9187909],"high":[9187909,9185823],"valu":[9187909],"old":[9187909,9189025,9186282,9186633,9185060],"school":[9187909],"teradata":[9187909],"now":[9187909,9185466,9185823,9186461,9185352,9185381,9185919,9185528,9185937,9185460,9186494,9187830],"all":[9187909,9188345,9185844,9185676,9186033,9187612,9186461,9185937,9185438,9185228,9187755,9186494],"about":[9187909,9188509,9185823,9185508,9185113,9185460,9185495,9185814,9186071,9186494],"datalak":[9187909],"incorporating":[9187909],"hadoop":[9187909],"technolog":[9187909],"spark":[9187909],"impala":[9187909],"front":[9187909],"lin":[9187909],"many":[9187909,9188509,9185676,9187944,9186282,9187830],"analyt":[9187909],"processing":[9187909],"enterpris":[9187909,9188509,9189025],"least":[9187909,9185937],"being":[9187909,9185397,9185814,9188343,9185763],"relegated":[9187909],"smal":[9187909,9189025,9186494],"part":[9187909,9185844,9188640,9185397,9187830],"whol":[9187909,9185994],"pipelin":[9187909],"storing":[9187909],"consolidated":[9187909],"integrated":[9187909],"model":[9187909,9187755],"returning":[9188345],"indee":[9188345,9189025],"majority":[9188345,9189025],"nev":[9188345,9186633,9184927],"w":[9188345],"away":[9188345,9188509,9188860,9185466,9187830],"especially":[9188345,9188640,9185113],"purpos":[9188345],"fulfil":[9188345],"right":[9188345,9188509,9185406,9185466,9185228],"tool":[9188345],"stuff":[9188345,9185406],"again":[9188509,9188860,9185528],"simply":[9188509,9188860,9187612],"agree":[9188509,9188860,9187944,9186282,9185352],"been":[9188509,9188860,9185466,9185937],"drov":[9188509,9188860],"compared":[9188509,9188860],"1990":[9188509,9188860],"why":[9188509,9185466,9185937],"wouldn't":[9188509],"vendor":[9188509],"oracl":[9188509],"microsoft":[9188509],"ibm":[9188509],"screwing":[9188509],"age":[9188509],"low":[9188509,9187755],"cost":[9188509,9186494],"lak":[9188509],"new":[9188509,9185466,9186282,9186633,9186461,9185508,9185438,9185329,9185814],"norm":[9188509],"cours":[9188509,9185352],"talking":[9188509,9185495,9185814],"middl":[9188509],"sur":[9188509,9186842,9186461,9189011,9185113],"individu":[9188509],"typ":[9188509,9187830],"lamp":[9188509],"setup":[9188509],"stil":[9188509,9189025,9187612,9189011,9185937],"going":[9188509,9185466,9189011,9186009],"fin":[9188509,9185676],"running":[9188509,9185844],"app":[9188509],"cloud":[9188509,9184927,9185060,9185113],"h":[9188509,9185937,9184989],"resili":[9188509],"fac":[9188509],"nod":[9188509,9185844,9186842],"outag":[9188509],"mysql":[9188509],"postgresql":[9188509],"both":[9188509,9185466,9185844,9186633],"pita":[9188509],"almost":[9188509],"every":[9188509,9185466,9186461,9185937],"any":[9188860,9185823,9185844,9188640,9185181],"link":[9188860],"said":[9188860],"'facts'":[9188860],"otherwis":[9188860],"com":[9188860,9185844],"hearsay":[9188860],"anecdot":[9188860],"suppos":[9189025,9185466],"depend":[9189025,9185466,9185438],"circl":[9189025],"run":[9189025,9185937,9185329],"actively":[9189025],"writing":[9189025],"cobol":[9189025],"wer":[9189025,9185397,9185937,9185814],"2011":[9189025],"personally":[9189025],"verify":[9189025],"making":[9189025,9185763],"million":[9189025,9185919],"dollar":[9189025],"seg":[9189025,9185823],"company":[9189025,9186282],"i'd":[9189025],"wag":[9189025],"whatev":[9189025],"wher":[9189025,9185466,9185823,9185676,9186282,9186461,9185113,9185329,9187755,9185460,9185495,9185814],"used":[9189025,9188343,9186494,9184989,9187830],"than":[9189025,9185466,9185844,9188673,9189011,9186009,9185528,9185060,9186494],"say":[9189025,9188640,9185381],"year":[9189025,9185352,9187830],"generally":[9189025,9186494],"non":[9189025,9185438],"crit":[9189025,9187944,9185228,9185161],"exploratory":[9189025],"off":[9189025],"project":[9189025,9185937],"even":[9189025,9185466,9185844,9185994,9186461,9188640,9189011,9185381,9185528,9185937,9184927,9187830],"clos":[9189025,9185844],"market":[9189025],"shar":[9189025],"among":[9189025],"i'll":[9189025],"cal":[9189025],"sil":[9189025],"conserv":[9189025],"enterprisey":[9189025],"tech":[9189025],"companies/it":[9189025],"depart":[9189025],"intuition":[9189025],"howev":[9189025,9185814,9186494],"nic":[9185406,9187755],"point":[9185406,9185994,9186633,9185508,9185937,9184927,9185267,9184989],"mention":[9185406,9186342,9187265,9185937],"regard":[9185406],"action":[9185406],"clustering":[9185406],"i'm":[9185466,9186842,9185113,9185460,9185814,9186071],"expert":[9185466],"sound":[9185466],"appreci":[9185466],"feedback":[9185466],"her":[9185466,9186633,9185381],"theory":[9185466,9187755],"person":[9185466,9186282,9188640],"initiating":[9185466],"addition":[9185466],"record":[9185466],"auckland":[9185466],"zealand":[9185466],"sam":[9185466,9185844,9185397,9185329,9185763,9186494],"tim":[9185466,9185844,9185994,9185676,9186033,9186282,9187612,9186633,9186461,9189011,9187265,9185352,9186009,9185397,9187456,9185937,9185438,9184927,9185267,9185460,9185814,9185763,9186494],"somebody":[9185466],"iniati":[9185466],"chang":[9185466,9186282,9187612,9186461],"gibraltar":[9185466],"london":[9185466],"antipod":[9185466],"form":[9185466],"millisecond":[9185466,9185823,9186461],"cannot":[9185466,9185844,9185994,9185937],"confirm":[9185466,9185844,9186461],"less":[9185466,9187612,9188673,9185381,9186071,9186494],"120":[9185466,9186461],"wait":[9185466,9185823,9185844],"befor":[9185466,9185844,9187612,9188640,9185438],"declaring":[9185466],"'consistency'":[9185466],"literally":[9185466,9186461],"add":[9185466,9186461,9185508],"each":[9185466,9185823,9185844,9186461,9186009,9185438,9186494,9184989],"request":[9185466,9186282,9186461],"assuming":[9185466],"damned":[9185466],"good":[9185466,9186461,9187456,9185937,9184927,9185267,9187755,9186002],"gen":[9185466,9185676],"track":[9185466,9185352],"numb":[9185466,9187612,9185508],"web":[9185466,9185823],"pag":[9185466,9185497],"hit":[9185466],"it'":[9185466,9188673,9184927,9185060,9187755,9185460,9186494],"count":[9185466,9185823,9186461],"distribut":[9185466],"stochast":[9185466],"process":[9185466,9187755,9186494,9187830],"between":[9185466],"p":[9185466,9185919],"second":[9185466,9185823,9185919,9185814],"largest":[9185466],"cit":[9185466],"throughout":[9185466],"world":[9185466,9187612,9189011,9186009,9185937,9185438,9187755,9185460,9185495,9186494],"ev":[9185466,9187944,9187265,9185397,9186494],"ten":[9185466],"potentially":[9185466,9186282,9186461],"way":[9185466,9189011,9187265,9185397,9185460,9185814,9186071,9186494],"mak":[9185466,9185844,9186282,9186461,9188673,9185397,9185937,9186494],"everyon":[9185466],"until":[9185466,9186461,9185352],"everything":[9185466,9185823,9185228,9185460,9185763],"committed":[9185466],"confirmed":[9185466],"foolish":[9185466,9186033],"hobgoblin":[9185466,9186033],"littl":[9185466,9186033],"mind":[9185466,9186033],"really":[9185466,9186842,9187944,9185352,9185438,9184927,9185329,9187755,9187830],"accept":[9185466,9187612],"d":[9185466,9185823],"de":[9185466,9186342],"merging":[9185466],"lat":[9185466,9186461,9188343],"understand":[9185466,9188640,9185438,9186494],"expect":[9185466,9188640,9185919,9187830],"rank":[9185466],"when":[9185466,9187612,9186461,9188640,9188673,9186009,9185763,9186494,9187830],"worldwid":[9185466],"re":[9185466,9187612,9189011,9186009,9185814,9186494],"system":[9185466,9185844,9186842,9185676,9187944,9186282,9186633,9185381,9185508,9185528,9185937,9185438,9184927,9185113,9185181,9185228,9185329,9185161,9187755,9185460,9185495,9186071,9186494,9186002,9187830],"diff":[9185466,9185438],"getting":[9185466,9186633,9188640],"served":[9185466],"loc":[9185466,9185844,9185937,9185329],"milliescond":[9185466],"250":[9185466],"staggering":[9185466],"incredibly":[9185466],"notic":[9185466,9188343],"i've":[9185823,9185937],"sp":[9185823,9187830],"too":[9185823,9186282,9187612],"much":[9185823,9186282,9188640,9185381,9185528,9185329],"lif":[9185823],"short":[9185823,9186461,9185460],"version":[9185823,9187265,9186494,9184989],"expos":[9185823,9186494],"differ":[9185823,9185060,9185267],"read/writ":[9185823],"mod":[9185823],"cli":[9185823,9188343],"let":[9185823,9185528,9185161,9185495],"decid":[9185823],"best":[9185823,9184927,9186494],"use":[9185823,9185937,9185060,9185113,9185763,9187830],"cas":[9185823,9185676,9186282,9186633,9186461,9185228],"spann":[9185823,9185994,9185352,9186009],"t":[9185823],"pap":[9185823,9185438],"highlight":[9185823],"interaction":[9185823,9186494],"transaction":[9185823,9185844,9186842,9185919,9186494],"read":[9185823,9185508,9185438,9187830],"pending":[9185823],"skip":[9185823],"past":[9185823,9185460],"timestamp":[9185823,9185844,9185994,9186342,9186009],"g":[9185823,9185844,9187612,9185329,9188343],"view":[9185823,9185937],"parti":[9185823],"turn":[9185823,9187830],"qp":[9185823],"appl":[9185823,9186282,9185528],"rec":[9185823],"without":[9185823,9186282,9185508],"latency":[9185823,9185397,9186494],"penalty":[9185823],"doing":[9185823,9185060],"opportunist":[9185823],"overlap":[9185823],"settling":[9185823],"requir":[9185823,9189011],"quorum":[9185823,9186009],"synchron":[9185823],"limited":[9185823,9185397],"max":[9185823],"median+1":[9185823],"keyed":[9185823],"minim":[9185823,9185814],"shard":[9185823],"kind":[9185823,9185352],"region":[9185823],"migr":[9185823],"asia":[9185823],"europ":[9185823],"don":[9185823,9185228],"actu":[9185823,9185381],"terminology":[9185823],"we'l":[9185823,9185528],"exist":[9185823,9185381,9185460],"mostly":[9185823,9187830],"distinct":[9185823],"metadata":[9185823],"startup":[9185823],"kept":[9185823],"tel":[9185823],"serv":[9185823,9185814],"respons":[9185823,9185844,9185937,9185267,9185814,9186494],"given":[9185844],"set":[9185844],"perfectly":[9185844,9186842],"synchronized":[9185844,9186842,9186494],"clock":[9185844,9185994,9186842,9187265,9185919,9186009,9185397,9185937,9186494,9187830],"may":[9185844],"66m":[9185844],"incoming":[9185844],"remot":[9185844,9187830],"log":[9185844,9186282,9187265,9185937,9185438,9186494,9187830],"ordering":[9185844,9187265,9186494],"period":[9185844,9186461],"heartbeat":[9185844,9186842],"green":[9185844],"light":[9185844,9188640,9188673,9185508,9185937],"commit":[9185844,9186009],"abort":[9185844],"perman":[9185844],"decision":[9185844,9186494],"wrt":[9185844],"commited/aborted":[9185844],"achieved":[9185844],"fast":[9185844,9186009],"66=132m":[9185844],"arbitrarily":[9185844,9187830],"increasing":[9185844],"frequency":[9185844],"subsequ":[9185844],"though":[9185844,9188673,9185060,9185113,9185267],"flow":[9185844],"132m":[9185844],"delay":[9185844,9186461,9185508,9186009,9187830],"limit":[9185844,9185267,9187755],"concurrency":[9185844,9186282],"warning":[9185994],"danger":[9185994],"practic":[9185994,9187755],"articl":[9185994,9185352,9185937,9184927,9185495,9186002],"machin":[9185994,9187612,9188640,9185397,9185937],"network":[9185994,9186461,9185937,9185113,9185329],"unreli":[9185994,9185937,9186494],"had":[9185994,9187456],"specif":[9185994,9186494],"section":[9185994],"7m":[9185994],"uncertainty":[9185994],"therefor":[9185994],"trust":[9185994,9186009],"ye":[9186842,9187612,9186342,9187456],"experi":[9186842,9185919,9185397,9185937],"despit":[9186842],"futurist":[9186842],"lack":[9186842,9186633,9185113],"resist":[9186842],"arbitrary":[9186842,9187755],"get":[9186842],"commited":[9186842],"aborted":[9186842],"deadlock":[9186842],"mayb":[9186842],"fix":[9186842],"eventually":[9185676,9187944,9187612,9186633,9186461,9185352],"mann":[9185676],"peopl":[9185676,9187944,9186033,9185397,9185937,9184927,9186071],"custom":[9185676,9186282,9187612],"us":[9185676],"class":[9185676,9184927],"valued":[9185676],"plenty":[9185676],"import":[9185676,9185937,9187755,9185763,9186494,9184989,9187830],"brainwashed":[9185676,9186033],"colleg":[9185676,9186033],"must":[9185676,9186033,9186494],"that'":[9185676,9186033,9189011,9186009,9185113,9185329,9185267],"necessary":[9185676,9186033,9185397],"couldn't":[9187944],"banking":[9187944],"rely":[9187944],"method":[9187944],"concept":[9187944,9187265,9185352,9185381,9186009,9185937,9185438,9186071,9186494],"cqr":[9187944],"sourcing":[9187944],"taught":[9187944],"universit":[9187944],"knew":[9186033],"whil":[9186282,9185814],"strict":[9186282,9185352,9185381],"overkil":[9186282],"situ":[9186282,9186633,9185161],"having":[9186282,9185763],"complicated":[9186282],"tak":[9186282,9188640,9185528],"happen":[9186282,9187612,9185397,9186494],"someon":[9186282,9187612],"address":[9186282,9187612,9186633],"simultaneously":[9186282,9187612,9185397],"delivery":[9186282],"risk":[9186282],"ending":[9186282],"half":[9186282,9185814],"parcel":[9186282,9186633],"not":[9186282,9187612],"certainly":[9186282,9185937,9187755],"sav":[9186282],"button":[9186282],"changed":[9186282],"field":[9186282,9184989],"intrinsically":[9186282],"comput":[9187612,9185438,9185161],"send":[9187612],"packag":[9187612],"end":[9187612,9186633,9185497,9184927,9186494],"wrong":[9187612,9185113],"mechan":[9187612,9186342,9185814,9185763],"plac":[9187612,9185397,9185113],"mitig":[9187612],"occur":[9187612,9185438],"forwarding":[9187612],"return":[9187612,9186633],"credit":[9187612],"card":[9187612],"chargeback":[9187612],"sometim":[9187612,9188640],"lost":[9187612,9188673],"bad":[9187612],"suspect":[9187612],"mov":[9187612,9185763],"consum":[9187612],"becoming":[9187612],"toler":[9187612],"answ":[9187612],"long":[9187612,9186494,9184989],"frequently":[9187612],"human":[9187612],"doesn't":[9186633,9186342],"imply":[9186633],"atomicity":[9186633],"mixtur":[9186633],"delivered":[9186633],"corruption":[9186633],"yap":[9186461],"memb":[9186461],"written":[9186461],"linearizability":[9186461],"anyon":[9186461],"reading":[9186461,9186002],"aft":[9186461,9185352,9187755],"argue":[9186461],"'that'":[9186461],"failed":[9186461],"stuck":[9186461],"forev":[9186461],"waiting":[9186461],"membership":[9186461],"connectivity":[9186461],"defin":[9186461],"poss":[9186461,9185528,9185937,9186494],"transition":[9186461],"during":[9186461],"coupled":[9186461],"partition":[9186461],"hardwar":[9186461,9186009,9185528,9186494,9187830],"word":[9186461],"expens":[9186461],"ask":[9186461],"worth":[9186461],"crdt":[9186461,9185937],"based":[9186461,9186009],"converg":[9186461],"enough":[9186461,9189011,9186494],"bank":[9186461],"choos":[9186461],"avail":[9186461],"withdraw":[9186461],"100":[9186461],"zeland":[9186461],"york":[9186461,9185508],"account":[9186461],"inconsistency":[9186461],"handled":[9186461],"lett":[9186461],"overdrawn":[9186461],"fun":[9188640,9186071],"exercis":[9188640],"dealing":[9188640],"play":[9188640,9185495,9185814,9186071],"who":[9188640,9185438,9184927,9187830],"omg":[9188640],"teh":[9188640],"netcod":[9188640,9188673],"sux":[9188640],"onlin":[9188640,9185397],"shoot":[9188640,9186071],"patently":[9188640],"unrealist":[9188640],"softwar":[9188640,9186494],"break":[9188640,9185937,9186494],"spee":[9188640,9188673,9189011,9185508,9185937],"exactly":[9188640,9185113,9185228],"granted":[9188640],"illusion":[9188640,9189011],"often":[9188640,9185763,9187830],"packet":[9188640,9188673],"leav":[9188640],"fault":[9188673],"factor":[9188673,9189011,9186009],"bufferbloat":[9188673],"terr":[9188673],"react":[9188673],"few":[9188673,9185528],"perc":[9188673],"slow":[9188673],"predomin":[9189011],"significantly":[9189011],"ide":[9189011],"sign":[9189011],"40m":[9189011],"round":[9189011,9185267,9186494],"trip":[9189011,9185267,9186494],"3940km":[9189011],"along":[9189011],"surfac":[9189011],"earth":[9189011,9185919],"200":[9189011],"000km/":[9189011],"glass":[9189011],"algorithm":[9189011,9185937,9187755],"trickery":[9189011],"gam":[9189011,9185397,9185460,9185495,9185814,9186071,9188343,9185763],"ord":[9189011,9185438,9186494],"provid":[9189011,9186494],"gaming":[9189011,9185814],"internet":[9189011],"remind":[9185057,9187830],"absolutely":[9185057,9185508],"spectacular":[9185057],"talk":[9185057,9186494],"2009":[9185057],"rich":[9185057],"hickey":[9185057],"appear":[9186342,9185352,9185495],"lamport":[9186342,9187265],"eleg":[9186342],"discussed":[9186342],"area":[9187265,9185937,9186494],"manifest":[9187265,9186494],"vector":[9187265,9186494],"abstracting":[9187265,9186494],"vari":[9187265],"quot":[9187265],"paragraph":[9187265],"invention":[9187265],"cited":[9187265],"bibliography":[9187265],"externally":[9185352,9185438],"serializ":[9185352],"'now'":[9185352,9186494],"idea":[9185352,9186009,9185438,9186494],"preposter":[9185352],"supporting":[9185352,9185381],"san":[9185352,9185381,9185508,9186009],"relativity":[9185352,9185381,9186009,9185528,9185937],"our":[9185352,9185381,9185919,9185397,9185113,9184989],"engineering":[9185352,9185438,9187830],"able":[9185352,9186494],"accurately":[9185352,9185438],"step":[9185352],"journey":[9185352],"'impossible'":[9185352],"dated":[9185352],"exaggerating":[9185352],"rul":[9185352],"thumb":[9185352],"previ":[9185352],"aren't":[9185381],"univers":[9185381],"except":[9185381],"it":[9185381,9186009,9185937],"quit":[9185381,9185438],"accur":[9185381,9186009],"simultaneity":[9185381,9185397,9185438],"valid":[9185381],"approxim":[9185381,9185528],"widely":[9185381,9185397],"error":[9185919,9186009,9185438],"bar":[9185919],"relativist":[9185919,9186009],"affect":[9185919],"pico":[9185919],"pack":[9185919],"sync":[9185919,9185397,9185460,9185495,9185814,9185763],"correct":[9185919],"reli":[9185919,9185937,9186494],"futur":[9185919,9185460],"db":[9185919],"context":[9185508],"dragonwriter'":[9185508],"francisco":[9185508],"21m":[9185508],"disk":[9185508],"seek":[9185508,9185814],"1200":[9185508],"random":[9185508],"ssd":[9185508],"200k":[9185508],"main":[9185508,9185763],"memory":[9185508,9185161],"caching":[9185508],"10m":[9185508],"cpu":[9185508,9185438,9185329],"cycl":[9185508],"matt":[9185508],"transmission":[9186009],"effect":[9186009],"decided":[9186009],"can't":[9186009],"contact":[9186009],"quickly":[9186009],"resolv":[9186009],"trusted":[9186009],"through":[9186009],"undermin":[9186009],"ordered":[9186009,9186494],"exploit":[9186009],"bett":[9186009,9185528],"improv":[9186009],"tiny":[9186009],"limiting":[9186009],"mo":[9186009],"furthermor":[9185528],"timescal":[9185528],"nanosecond":[9185528,9184989],"dist":[9185528,9184989],"met":[9185528],"thousand":[9185528],"kilomet":[9185528],"reality":[9185528,9185397,9185460],"intuit":[9185528],"newtonian":[9185528],"chip":[9185528,9185438],"design":[9185528,9185460],"coupl":[9185528],"rack":[9185528],"centimet":[9185528],"perhap":[9185528],"seem":[9185528],"once":[9185528],"build":[9185528,9185937,9187755,9186494],"analyz":[9185528],"excel":[9185397],"overview":[9185397],"isn't":[9185397,9187755,9186494],"connected":[9185397],"togeth":[9185397],"hug":[9185397],"creating":[9185397,9184989],"shared":[9185397,9185181,9185228],"becom":[9185397],"appreciated":[9185397],"virtu":[9185397],"develop":[9185397],"socially":[9185397],"solved":[9185397],"rapt":[9185397,9185497],"timed":[9185397],"rap":[9185397],"battl":[9185397],"maintained":[9185397],"tick":[9185397],"adjust":[9185397],"allowing":[9185397],"beat":[9185397,9185937],"kicking":[9185397],"somewhat":[9185397],"across":[9185397],"brows":[9185397,9185937],"helped":[9185397],"video":[9185397,9188343],"created":[9185397],"feeling":[9185397],"dud":[9185497],"eating":[9185497],"bowl":[9185497],"cer":[9185497],"landing":[9185497],"background":[9185497],"vid":[9185497],"downtown":[9187456],"det":[9187456],"hallelujah":[9185937],"hearing":[9185937],"truth":[9185937],"let'":[9185937],"summar":[9185937],"exciting":[9185937],"hybrid":[9185937],"zookeep":[9185937],"feel":[9185937],"preaching":[9185937],"upset":[9185937],"globally":[9185937],"l":[9185937,9187755],"@rdtsc":[9185937],"next":[9185937],"primary":[9185937],"down":[9185937],"interesting":[9185937,9185814],"turned":[9185937],"ful":[9185937],"open":[9185937,9185495,9188343],"sourc":[9185937,9185495,9187830],"worst":[9185937,9185228],"environ":[9185937],"aka":[9185937],"javascript":[9185937],"unreliability":[9185937],"surv":[9185937],"chos":[9185937],"worked":[9185937],"involving":[9185937],"eventu":[9185937],"notion":[9185937,9185460,9186494],"replica":[9185937],"speci":[9185937],"recommend":[9185937],"thank":[9185438,9187830],"help":[9185438],"introduction":[9185438],"history":[9185438],"literatur":[9185438],"related":[9185438,9185329,9186022],"people'":[9185438],"broken":[9185438],"loos":[9185438],"intuitively":[9185438],"held":[9185438],"unhelp":[9185438],"belief":[9185438],"somewher":[9185438],"folk":[9185438],"includ":[9185438,9184989],"tutori":[9185438],"describ":[9185438],"'time'":[9185438],"sequ":[9185438],"probabilist":[9185438,9187755],"requiring":[9185438],"descriptor":[9185438],"precision":[9185438],"smallest":[9185438],"discern":[9185438],"bound":[9185438,9187755],"probability":[9185438,9187755],"concret":[9185438],"'get'":[9185438],"true":[9185438],"imposs":[9185438],"easy":[9185438],"succ":[9185438],"observing":[9185438],"coh":[9185438],"scal":[9185438],"internally":[9185438],"coher":[9185438],"cross":[9185438],"contin":[9185438],"underscor":[9184927],"explaining":[9184927],"computing":[9184927,9185060],"lambda":[9184927],"architectur":[9184927],"bree":[9184927],"scenario":[9184927,9185228],"golden":[9184927],"hamm":[9184927],"technology":[9184927,9185060,9185113],"certain":[9184927,9187755,9187830],"monitor":[9184927],"trend":[9184927],"act":[9184927],"soft":[9184927,9185228],"deadlin":[9184927],"using":[9184927],"control":[9184927],"anti":[9184927],"lock":[9184927],"braking":[9184927],"bas":[9184927],"understanding":[9184927],"cap":[9184927],"theorem":[9184927],"locally":[9185060,9185161],"accessed":[9185060,9185161],"dynamically":[9185060,9185228,9185161],"provisioned":[9185060],"capacity":[9185060],"remote/shared":[9185060],"hosting":[9185060],"already":[9185113],"multitasking":[9185113],"covered":[9185113],"decad":[9185113],"ago":[9185113],"metaphor":[9185113],"multiprocessing":[9185113],"got":[9185113],"impression":[9185113],"reliability":[9185113,9186494],"issue":[9185113,9185267],"shocked":[9185181],"ab":[9185181,9185329],"actually":[9185181,9185495],"dynamicly":[9185181],"resourc":[9185181,9185228,9185329,9185161],"anything":[9185181],"uncommon":[9185228],"unsaf":[9185228],"realtim":[9185228],"sinc":[9185228],"dimension":[9185228,9186494],"gain":[9185228],"tend":[9185228],"big":[9185228],"vehicl":[9185329],"stability":[9185329],"assist":[9185329],"breaking":[9185329],"dynam":[9185329],"alloc":[9185329],"ditto":[9185329],"sending":[9185329],"inform":[9185329,9186002],"traction":[9185329],"abs/traction":[9185329],"provisionedthi":[9185161],"mission":[9185161],"safety":[9185161],"standard":[9185161],"unhappy":[9185161],"allocating":[9185161],"alon":[9185161],"entir":[9185161,9186494],"consider":[9185267],"imposed":[9185267],"commun":[9185267,9186494],"result":[9187755],"impossibility":[9187755],"showing":[9187755],"ability":[9187755],"layman":[9187755],"question":[9187755],"wond":[9187755],"determinist":[9187755,9186494],"theoret":[9187755],"solv":[9187755,9187830],"consensu":[9187755,9185460,9186494],"irrelev":[9187755],"sup":[9187755],"meteorit":[9187755],"destroying":[9187755],"planet":[9187755],"shaping":[9185460],"thinking":[9185460],"designing":[9185460,9185814],"rath":[9185460],"soon":[9185460,9188343,9185763],"robust":[9185460,9185814],"interv":[9185460],"currently":[9185460],"working":[9185460,9187830],"multiplay":[9185460,9185763],"principl":[9185460],"matur":[9185495],"heavy":[9185495],"lifting":[9185495],"we'v":[9185495],"unity":[9185495],"couchbas":[9185495],"lit":[9185495],"drop":[9185495],"shap":[9185495],"automatically":[9185495],"devic":[9185495],"sorry":[9185495],"plug":[9185495],"great":[9185495,9185814],"justin":[9185495],"s":[9185495],"team":[9185495],"stepping":[9185495,9185814],"buzzword":[9185495,9185814],"confront":[9185495],"looking":[9185814],"syncing":[9185814],"stat":[9185814],"inventory":[9185814],"around":[9185814],"realit":[9185814],"finalizing":[9185814],"entity":[9185814],"position":[9185814],"damag":[9185814],"collision":[9185814],"behind":[9185814],"designed":[9185814],"preserv":[9185814],"autonomy":[9185814],"immedi":[9185814],"basically":[9185814],"deemphasizing":[9185814],"aiming":[9185814],"emphasizing":[9185814],"tact":[9185814],"dodging":[9185814],"received":[9185814],"buzzwordsthos":[9185814],"pesky":[9185814],"caught":[9185814],"misled":[9185814],"typically":[9185814],"generalized":[9185814],"meaning":[9185814,9187830],"@stcredzero":[9186071],"interested":[9186071],"building":[9186071],"simul":[9186071],"trying":[9186071],"gamify":[9186071],"teach":[9186071],"tactil":[9186071],"entertain":[9186071],"educ":[9186071],"email":[9186071],"mark@gundb":[9186071],"competit":[9188343],"window":[9188343],"freedom":[9188343],"you'll":[9188343],"door":[9188343],"swath":[9188343],"userbas":[9188343],"played":[9185763],"mobil":[9185763],"protocol":[9185763,9186494],"rel":[9185763],"timing":[9185763],"charact":[9185763],"oppon":[9185763],"highly":[9185763],"unpredict":[9185763],"jittery":[9185763],"altern":[9185763],"timelin":[9185763],"warp":[9185763],"resync":[9185763],"nullified":[9185763],"acknowledg":[9186494],"inability":[9186494],"assum":[9186494],"entirely":[9186494],"known":[9186494],"author":[9186494],"conceptu":[9186494],"level":[9186494],"challeng":[9186494],"logically":[9186494],"coordin":[9186494],"providing":[9186494],"surrog":[9186494],"resulting":[9186494],"fundamentally":[9186494],"common":[9186494],"const":[9186494],"sequenti":[9186494],"messag":[9186494],"deliv":[9186494],"insid":[9186494],"silv":[9186494],"bullet":[9186494],"assuring":[9186494],"correctly":[9186494],"immutability":[9186494],"id":[9186494],"begin":[9186494],"input":[9186494],"produc":[9186494],"output":[9186494],"perspect":[9186494,9187830],"implementor":[9186494],"multipl":[9186494],"piec":[9186494,9184989],"puzzl":[9186494],"detail":[9186494],"perform":[9186494,9187830],"similar":[9186494],"bug":[9186494],"cryptography":[9186494],"cod":[9186494],"threat":[9186494],"myriad":[9186494],"researched":[9186494],"suggest":[9186002],"insight":[9186002],"haven't":[9186002],"built":[9186002],"pract":[9186002],"rear":[9184989],"admir":[9184989],"grac":[9184989],"hopp":[9184989],"pion":[9184989],"whos":[9184989],"achiev":[9184989],"compil":[9184989],"illustr":[9184989],"giving":[9184989],"stud":[9184989],"wir":[9184989],"inche":[9184989],"maximum":[9184989],"electricity":[9184989],"travel":[9184989],"mad":[9184989],"print":[9184989],"enjoy":[9187830],"abstraction":[9187830],"hellishly":[9187830],"leaky":[9187830],"coming":[9187830],"biology":[9187830],"assumed":[9187830],"10cm":[9187830],"guarant":[9187830],"expected":[9187830],"guy":[9187830],"underlying":[9187830],"ignor":[9187830],"processor":[9187830],"finit":[9187830],"funny":[9187830],"depressing":[9187830],"jam":[9187830],"micken":[9187830]},"TotalComments":56}